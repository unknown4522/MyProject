@using InventoryDesign.Models;
@model Modelall
@{
    ViewBag.Title = "uniform_stock";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Uniform Stock</title>
    <!-- Include your custom font and typography styles here -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.7.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom styling for buttons */
        .custom-button {
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .custom-button2 {
            background-color: #ff0000;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .custom-button:hover {
            background-color: #2980b9;
        }

        /* Style for collapsed content */
        .collapsed-content {
            background-color: #f8f9fa;
            padding: 20px;
            border: 1px solid #ddd;
        }

        /* Style for clickable rows */
        .clickable-row:hover {
            text-decoration: underline;
            cursor: pointer;
            color: #333;
        }

        /* Center-align text */
        .center-text {
            text-align: center;
        }

        /* Custom CSS for the search box */
        .search-form {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .custom-input {
            flex-grow: 1;
            margin-right: 10px;
        }

        /* Custom styles for the modal */
        .modal-dialog {
            max-width: 300px;
        }

        .modal-header {
            background-color: #3498db;
            color: #fff;
            border-bottom: none;
        }

        .modal-title {
            font-size: 24px;
            text-align: center;
            margin-bottom: 20px;
        }

        .modal-body {
            text-align: left;
        }

        /* Table styling */
        .table-striped th {
            background-color: #3498db;
            color: #fff;
        }
        .center-text {
            text-align: center;
        }

        .custom-button {
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .custom-button:hover {
                background-color: #2980b9;
            }

        /* Improve modal styling */
        .modal-dialog {
            max-width: 500px;
        }

        .modal-header {
            background-color: #3498db;
            color: #fff;
            border: none;
        }

        .modal-title {
            font-size: 24px;
            text-align: center;
            margin-bottom: 20px;
        }

        .modal-body {
            text-align: left;
        }

        /* Enhance the "Apparel" button in the pop-up */
        .custom-popup-button {
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 7px 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .custom-popup-button:hover {
                background-color: #09f623;
            }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h2 class="text-center">@ViewBag.campus_name</h2>
        <h1 class="text-center">Apparel List</h1>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" id="tableSearch" class="form-control" placeholder="Search...">
                    <button class="btn btn-primary" id="searchButton" type="button">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="dropdown mb-3">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="navbarDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Apparel
                    </button>
                    <button type="button" class="btn btn-primary custom-popup-button" data-bs-toggle="modal" data-bs-target="#adduniform">
                        Add Record
                    </button>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="@Url.Action("uniform_stock", "Inventory", new { campus_name = ViewBag.campus_name })">Apparel List</a>
                        <a class="dropdown-item" href="@Url.Action("grade_list", "Inventory", new { campus_name = ViewBag.campus_name })">Grade List</a>
                        <a class="dropdown-item" href="@Url.Action("size_list", "Inventory", new { campus_name = ViewBag.campus_name })">Size List</a>
                        <a class="dropdown-item" href="@Url.Action("Claim_stub", "Inventory", new { campus_name = ViewBag.campus_name })">Claim Inventory</a>
                        <a class="dropdown-item" href="@Url.Action("Clothes_list", "Inventory", new { campus_name = ViewBag.campus_name })">Apparel Type</a>
                        <a class="dropdown-item" href="@Url.Action("clotheslog", "Inventory", new { campus_name = ViewBag.campus_name })">Apparel Records</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>GRADE LEVEL</th>
                                <th>CLOTHES NAME</th>
                                <th>SIZE</th>
                                <th>QUANTITY</th>
                                <th>ACTION</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var reversedItems = Model.Alluniform_stock.Reverse().ToList();
                            }
                            @foreach (var item in reversedItems)
                            {
                                <tr>
                                    <td class="center-text">@Html.DisplayFor(modelItem => item.grade_level)</td>
                                    <td>@Html.DisplayFor(modelItem => item.clothes_type)</td>
                                    <td>@Html.DisplayFor(modelItem => item.size)</td>
                                    <td>@Html.DisplayFor(modelItem => item.quantity)</td>
                                    <td>
                                        <button type="button" class="btn btn-primary custom-button" data-bs-toggle="modal" data-bs-target="#addquantity" onclick="setUpdatestock('@item.uniform_id', '@item.clothes_type', '@item.grade_level', '@item.size')">ADD</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- ADD QUANTITY MODAL -->
    <div class="modal fade add-item-modal" id="addquantity" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title text-center" id="exampleModalLabel">ADD</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("addstock", "Inventory", FormMethod.Post))
                    {
                        <div class="row mb-3">
                            <div class="col-md-10 center-text">
                                <label for="add_stock" class="form-label fw-bold">QUANTITY</label>
                                <input type="number" class="form-control center-text" id="add_stock" name="add_stock" placeholder="Enter quantity" autocomplete="off" required />
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control visually-hidden" id="add_uniform_id" name="add_uniform_id" placeholder="Enter uniform ID" autocomplete="off" required readonly />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <input type="text" class="form-control visually-hidden" id="add_grade_level" name="add_grade_level" placeholder="Enter Grade Level" autocomplete="off" required readonly />
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control visually-hidden" id="add_clothes_type" name="add_clothes_type" placeholder="Enter Clothes Type" autocomplete="off" required readonly />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <input type="text" class="form-control visually-hidden" id "add_size" name="add_size" placeholder="Enter Size" autocomplete="off" required readonly />
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control visually-hidden" id="add_transaction" name="add_transaction" value="ADD" autocomplete="off" required readonly />
                            </div>
                        </div>
                        <div class="col-md-10 center-text">
                            <input type="text" class="form-control center-text visually-hidden" id="add_campus_name" name="add_campus_name" value="@ViewBag.campus_name" autocomplete="off" required />
                        </div>
                        <div class="modal-footer text-center">
                            <button type="submit" class="btn btn-primary" name="update_transaction">IN</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- ADD UNIFORM MODAL -->
    <div class="modal fade add-item-modal" id="adduniform" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title text-center" id="exampleModalLabel">ADD UNIFORM</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("adduniform", "Inventory", FormMethod.Post))
                    {
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="add_grade_level" class="form-label fw-bold">GRADE LEVEL</label>
                                <select class="form-select" id="add_grade_level" name="add_grade_level" autocomplete="off">
                                    @foreach (var brand in Model.Allgrades)
                                    {
                                        <option value="@brand.grade_level">@brand.grade_level</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="add_uniform_type" class="form-label fw-bold">CLOTHES TYPE</label>
                                <select class="form-select" id="add_uniform_type" name="add_uniform_type" autocomplete="off">
                                    @foreach (var brand in Model.Allclothes)
                                    {
                                        <option value="@brand.clothes_type">@brand.clothes_type</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="add_size" class="form-label fw-bold">SIZE</label>
                                <select class="form-select" id="add_size" name="add_size" autocomplete="off">
                                    @foreach (var brand in Model.Allsize)
                                    {
                                        <option value="@brand.size">@brand.size</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="add_stock" class="form-label fw-bold">Quantity</label>
                                <input type="text" class="form-control" id="add_stock" name="add_stock" placeholder="Enter Quantity" autocomplete="off" required />
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control visually-hidden" id="add_campus_name" name="add_campus_name" value="@ViewBag.campus_name" autocomplete="off" required />
                            </div>
                        </div>
                        <div class="modal-footer text-center">
                            <button class="btn btn-primary">ADD</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">BACK</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script>
        function setUpdatestock(uniform_id, grade_level, clothes_type, size) {
            // Set values for the "ADD" modal
            document.getElementById('add_uniform_id').value = uniform_id;
            document.getElementById('add_grade_level').value = grade_level;
            document.getElementById('add_clothes_type').value = clothes_type;
            document.getElementById('add_size').value = size;
        }

        // Add more functions as needed

        function searchTable() {
            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("tableSearch");
            filter = input.value.toUpperCase();
            table = document.querySelector(".table-striped"); // Change this line
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those that don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td");
                for (var j = 0; j < td.length; j++) {
                    if (td[j]) {
                        txtValue = td[j].textContent || td[j].innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break; // Break the inner loop since the row matches the filter
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            }
        }

        // Attach an event listener to the search input for keyup events
        document.getElementById("tableSearch").addEventListener("keyup", searchTable);
    </script>
</body>
</html>

